import { routing } from "@/i18n/routing";
import '@/plugins/i18n';
import type { Metadata } from "next";
import { setRequestLocale } from "next-intl/server";
import { Geist, Geist_Mono } from "next/font/google";
import { notFound } from "next/navigation";
import { useSnapshot } from 'valtio';
import '../store';
import { preferenceStore } from "../store/preference";
import "./style/globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return routing.locales.map((locale) => ({locale}));
}


export default function LocaleLayout({
  children,
  params: {locale}
}: Readonly<{
  children: React.ReactNode;
  params: {locale: 'zh-CN' | 'en-US'};
}>) {
  const preference = useSnapshot(preferenceStore);
  if (!routing.locales.includes(locale)) {
    notFound();
  }
  setRequestLocale(locale);
  return (
    <html lang={preference.state.locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
